var imagePath = "/images";
var cardPositions = {
  768: {
    profile: {
      zIndex: 11, // 1
      top: 15,
      left: 17,
    },
    "face-capture": {
      zIndex: 7, // 7
      top: 314,
      left: 242,
    },
    location: {
      zIndex: 2, // 2
      top: 708,
      left: 27,
    },
    "known-associates": {
      zIndex: 8, // 8
      top: 13,
      left: 425,
    },
    missions: {
      zIndex: 6, // 6
      top: 77,
      left: 242,
    },
    training: {
      zIndex: 9, // 9
      top: 684,
      left: 163,
    },
    languages: {
      zIndex: 3, // 3
      top: 824,
      left: 492,
    },
    skillset: {
      zIndex: 10, // 10
      top: 446,
      left: 53,
    },
    "audio-feed": {
      zIndex: 5, // 5
      top: 1053,
      left: 343,
    },
    "server-log": {
      zIndex: 4, // 4
      top: 980,
      left: 51,
    },
  },
  980: {
    profile: {
      zIndex: 11, // 1
      top: 14,
      left: 19,
    },
    "face-capture": {
      zIndex: 6, // 6
      top: 90,
      left: 349,
    },
    location: {
      zIndex: 2, // 2
      top: 440,
      left: 19,
    },
    "known-associates": {
      zIndex: 7, // 7
      top: 174,
      left: 235,
    },
    missions: {
      zIndex: 5, // 5
      top: 20,
      left: 452,
    },
    training: {
      zIndex: 9, // 9
      top: 444,
      left: 454,
    },
    languages: {
      zIndex: 10, // 10
      top: 606,
      left: 701,
    },
    skillset: {
      zIndex: 8, // 8
      top: 188,
      left: 704,
    },
    "audio-feed": {
      zIndex: 3, // 3
      top: 697,
      left: 52,
    },
    "server-log": {
      zIndex: 4, // 4
      top: 597,
      left: 471,
    },
  },
  1200: {
    profile: {
      zIndex: 11, // 1
      top: 50,
      left: 25,
    },
    "face-capture": {
      zIndex: 6, // 6
      top: 114,
      left: 230,
    },
    location: {
      zIndex: 2, // 2
      top: 456,
      left: 116,
    },
    "known-associates": {
      zIndex: 7, // 7
      top: 240,
      left: 589,
    },
    missions: {
      zIndex: 4, // 4
      top: 60,
      left: 660,
    },
    training: {
      zIndex: 5, // 5
      top: 426,
      left: 690,
    },
    languages: {
      zIndex: 9, // 9
      top: 674,
      left: 416,
    },
    skillset: {
      zIndex: 10, // 10
      top: 211,
      left: 892,
    },
    "audio-feed": {
      zIndex: 3, // 3
      top: 730,
      left: 20,
    },
    "server-log": {
      zIndex: 8, // 8
      top: 700,
      left: 768,
    },
  },
  1600: {
    profile: {
      zIndex: 11, // 1
      top: 50,
      left: 54,
    },
    "face-capture": {
      zIndex: 4, // 4
      top: 132,
      left: 380,
    },
    location: {
      zIndex: 2, // 2
      top: 461,
      left: 119,
    },
    "known-associates": {
      zIndex: 7, // 7
      top: 50,
      left: 1261,
    },
    missions: {
      zIndex: 8, // 8
      top: 60,
      left: 629,
    },
    training: {
      zIndex: 6, // 6
      top: 541,
      left: 1048,
    },
    languages: {
      zIndex: 10, // 10
      top: 680,
      left: 1196,
    },
    skillset: {
      zIndex: 9, // 9
      top: 298,
      left: 829,
    },
    "audio-feed": {
      zIndex: 3, // 3
      top: 683,
      left: 40,
    },
    "server-log": {
      zIndex: 5, // 5
      top: 671,
      left: 530,
    },
  },
};

// Cards array
var cards = [
  {
    title: "Profile",
    width: 380,
    html: `
      <div class="profile-info">
        <table>
          <tbody>
            <tr><td>Name</td><td>Amar Chandan</td></tr>
            <tr><td>Profession</td><td>Student</td></tr>
            <tr><td>Sex</td><td>Virgin</td></tr>
            <tr>
              <td>Contact</td>
              <td>
                <a href="mailto:amarchandan@outlook.com"><i class="fas fa-envelope"></i></a>
                <a href="https://www.linkedin.com/in/theamarchandan"><i class="fab fa-linkedin-in"></i></a>
                <a href="https://x.com/theamarchandan"><i class="fab fa-twitter"></i></a>
                <a href="https://github.com/amarchandan" target="_blank"><i class="fab fa-github"></i></a>
              </td>
            </tr>
          </tbody>
        </table>
      </div>`
  },
  {
    title: "Missions",
    width: 560,
    html: `<table><tbody><tr><td>KIDNAPPED RICH BITCH ðŸ¥º</td></tr></tbody></table>`
  },
  {
    title: "Languages",
    width: 250,
    html: `<table><tbody>
        <tr><td width="50%">Assembly</td><td>BASH</td></tr>
        <tr><td>C</td><td>C++</td></tr>
        <tr><td>Python</td><td>Rust</td></tr>
      </tbody></table>`
  },
  {
    title: "Skillset",
    width: 350,
    html: `<table><tbody>
        <tr><td>Web Development (Noob in frontend)</td></tr>
        <tr><td>Cloud Computing</td></tr>
        <tr><td>API Creation / Integration</td></tr>
        <tr><td>Linux (Shell Scripting & Basics)</td></tr>
        <tr><td>Cybersecurity (Red / Blue / Yellow Team)</td></tr>
        <tr><td>DevOps - Git / GitHub / Azure / AWS</td></tr>
      </tbody></table>`
  },
{
    title: "Server Log",
    width: 400,
    html: `<div class="server-log-container"></div>`,
  },
];

var highZ = cards.length + 1;
var cardsContainer = document.querySelector(".cards-container");
var cardsContainerWidth = cardsContainer.offsetWidth;

cards.forEach(function (card, i) {
  var zIndex = i === 0 ? cards.length + 1 : cards.length - i;
  var cardClass = card.title.toLowerCase().replace(/ /g, "-");
  var cardStyles = `width: ${card.width}px;`;

  cardsContainer.innerHTML += `
		<div class="card ${cardClass}" style="${cardStyles}" tabindex="0" data-card="${cardClass}">
			<div class="card-header">
				<div class="card-title">
					<h2>${card.title}</h2>
				</div>
				<div class="card-actions">
					<a href="#" class="move-card" tabindex="-1"><i class="fa fa-arrows-alt"></i></a>
				</div>
			</div>
			<div class="card-body">
				${card.html}
			</div>
		</div>
	`;
});

// drag stuff
var dragEl = null;
var startX = 0;
var startY = 0;
var differenceX = 0;
var differenceY = 0;
var cardEls = document.querySelectorAll(".cards-container .card");

cardEls.forEach(function (card) {
  card.onfocus = function () {
    card.style.zIndex = highZ + 1;
    highZ++;
  };
});

function getTouchEvent(e) {
  var touch = e;

  if (
    e.type == "touchstart" ||
    e.type == "touchmove" ||
    e.type == "touchend" ||
    e.type == "touchcancel"
  ) {
    var evt = typeof e.originalEvent === "undefined" ? e : e.originalEvent;
    touch = evt.touches[0] || evt.changedTouches[0];
  }

  return touch;
}

function touchstart(e) {
  var touchEvt = getTouchEvent(e);
  dragEl = null;

  if (!e.target.closest(".send-message") && !e.target.closest(".terminal")) {
    if (e.target.closest(".card")) {
      e.target.closest(".card").style.zIndex = highZ + 1;
      highZ++;
    }

    if (e.target.closest(".card-header") || e.target.closest(".modal-header")) {
      dragEl = e.target.closest(".card")
        ? e.target.closest(".card")
        : e.target.closest(".modal");
      startX = touchEvt.clientX;
      startY = touchEvt.clientY;
      differenceX = startX - dragEl.offsetLeft;
      differenceY = startY - dragEl.offsetTop;
    }
  }
}

function touchmove(e) {
  if (dragEl) {
    var touchEvt = getTouchEvent(e);
    e.preventDefault();
    dragEl.style.left = touchEvt.clientX - differenceX + "px";
    dragEl.style.top = touchEvt.clientY - differenceY + "px";
  }
}

function touchend(e) {
  if (dragEl) {
    dragEl = null;
  }
}

document.onmousedown = touchstart;
document.ontouchstart = touchstart;
document.onmousemove = touchmove;
document.ontouchmove = touchmove;
document.onmouseup = touchend;
document.ontouchend = touchend;

// audio feed
var AudioFeed = function (options) {
  if (!options.container) {
    return;
  }
  var audioFeed = options.container;
  var audioFeedHeight = audioFeed.clientHeight;
  var barColor = options.barColor || "#fff";
  audioFeed.style.width = "100%";
  audioFeed.style.backgroundColor = options.bgColor || "#000";
  audioFeed.style.display = "table";

  var barWidth = Math.floor(audioFeed.clientWidth / 100);

  for (var i = 0; i < 100; i++) {
    audioFeed.innerHTML +=
      '<div class="audio-bar-wrap" style="width: ' +
      barWidth +
      'px; display: table-cell; vertical-align: bottom;"><div class="audio-bar" style="background: ' +
      barColor +
      '; margin: 0 1px; transition: .6s;"></div></div>';
  }

  setInterval(function () {
    var bars = document.querySelectorAll(".audio-bar");

    bars.forEach(function (bar) {
      var barHeight = Math.floor(Math.random() * audioFeedHeight);
      bar.style.height = barHeight + "px";
    });
  }, 100);
};

new AudioFeed({
  container: document.querySelector(".audio-feed-container"),
  barColor: "#67B6B9",
});

// server log
var serverLogContainer = document.querySelector(".server-log-container");
var serverLog = document.querySelector(".server-log .card-body");
var commands = [];

for (var i = 0; i < 20; i++) {
  var ip =
    Math.floor(Math.random() * 255) +
    "." +
    Math.floor(Math.random() * 255) +
    "." +
    Math.floor(Math.random() * 255) +
    "." +
    Math.floor(Math.random() * 255);
  commands.push({ text: "Decrypting " + ip + "...", typing: true });
}

new Terminal({
  container: serverLogContainer,
  typingSpeed: 50,
  loop: true,
  commands: commands,
  lineBegin: function () {
    serverLog.scrollTop = serverLog.scrollHeight;
  },
  pause: 250,
});

var terminalWrap = document.querySelector(".terminal");
var terminalContainer = document.querySelector(".terminal .card-body");

// terminal
if (window.location.pathname === "/") {
  new Terminal({
    container: document.querySelector(".terminal .card-body"),
    typingSpeed: 75,
    commands: [
      {
        text: 'load profile -firstName "Amar" -lastName "Chandan"',
        typing: true,
      },
      {
        text: "loading...",
        typing: false,
      },
    ],
    done: function () {
      setTimeout(function () {
        terminalWrap.style.display = "none";
        cardsContainer.style.visibility = "visible";

        setTimeout(function () {
          cardsContainer.classList.add("loaded");
        });
      }, 1000);
    },
  });
} else {
  new Terminal({
    container: document.querySelector(".terminal .card-body"),
    typingSpeed: 75,
    commands: [
      {
        text: "The page you were looking for does not exist",
        typing: true,
      },
      {
        text: "How did you even get here?",
        typing: true,
      },
      {
        text: '<a href="/">Go Home</a>',
        typing: false,
      },
    ],
  });
}

function positionCards() {
  if (cardsContainer.offsetWidth > 480) {
    var cardsContainerWidth = cardsContainer.offsetWidth;

    cardEls.forEach(function (card) {
      var cardObj = cardPositions[cardsContainerWidth][card.dataset.card];
      card.style.top = cardObj.top + "px";
      card.style.left = cardObj.left + "px";
      card.style.zIndex = cardObj.zIndex;
    });
  }
}

var resizeTimeout;

if (window.location.pathname === "/") {
  window.onresize = function () {
    clearTimeout(resizeTimeout);

    resizeTimeout = setTimeout(function () {
      positionCards();
    }, 500);
  };

  positionCards();
}

var missions = {
  "nothing": `
		<p>Khud soch lu phele</p>
	`,
};

// modal
var modalHighZ = 100;
var lastFocusEl;

function moveForward(e) {
  e.target.closest(".modal").style.zIndex = modalHighZ + 1;
  modalHighZ++;
}

function modal(e) {
  e.preventDefault();
  lastFocusEl = e.target;

  var title = e.target.dataset.title;
  var slug = title
    .toLowerCase()
    .replace(/ /g, "-")
    .replace(/\./g, "")
    .replace(/,/g, "");
  var body = missions[title];

  modalHighZ++;

  if (document.querySelector(".modal." + slug)) {
    document.querySelector(".modal." + slug).style.zIndex = modalHighZ + 1;
  } else {
    var m = document.createElement("div");
    var cardsContainerWidth = cardsContainer.offsetWidth;
    var leftPos =
      cardsContainerWidth <= 480
        ? Math.floor(Math.random() * 5) + 5 + "%"
        : Math.floor(Math.random() * 20) + 20 + "%";
    var topPos = Math.floor(Math.random() * 30) + 30 + "%";
    m.classList = "modal " + slug;
    m.style.left = leftPos;
    m.style.top = topPos;
    m.style.zIndex = modalHighZ;
    m.ontouchstart = moveForward;
    m.onmousedown = moveForward;
    m.tabIndex = 0;
    m.innerHTML = `
			<div class="modal-header">
				<div class="modal-title">Mission: ${title}</div>
				<div class="modal-actions"><a title="Close Modal" href="#" onclick="closeModal(event)"><i class="fa fa-times"></i></a></div>
			</div>
			<div class="modal-body">
				<span class="classified">CLASSIFIED</span>
				${body}
			</div>
		`;
    document.body.appendChild(m);
    setTimeout(function () {
      m.focus();
    });
  }
}

function closeModal(e) {
  e.preventDefault();
  e.target.closest(".modal").remove();
  lastFocusEl.focus();
}
