var imagePath = "/images";
var cardPositions = {
  768: {
    profile: {
      zIndex: 11, // 1
      top: 15,
      left: 17,
    },
    "face-capture": {
      zIndex: 7, // 7
      top: 314,
      left: 242,
    },
    location: {
      zIndex: 2, // 2
      top: 708,
      left: 27,
    },
    "known-associates": {
      zIndex: 8, // 8
      top: 13,
      left: 425,
    },
    missions: {
      zIndex: 6, // 6
      top: 77,
      left: 242,
    },
    training: {
      zIndex: 9, // 9
      top: 684,
      left: 163,
    },
    languages: {
      zIndex: 3, // 3
      top: 824,
      left: 492,
    },
    skillset: {
      zIndex: 10, // 10
      top: 446,
      left: 53,
    },
    "audio-feed": {
      zIndex: 5, // 5
      top: 1053,
      left: 343,
    },
    "server-log": {
      zIndex: 4, // 4
      top: 980,
      left: 51,
    },
  },
  980: {
    profile: {
      zIndex: 11, // 1
      top: 14,
      left: 19,
    },
    "face-capture": {
      zIndex: 6, // 6
      top: 90,
      left: 349,
    },
    location: {
      zIndex: 2, // 2
      top: 440,
      left: 19,
    },
    "known-associates": {
      zIndex: 7, // 7
      top: 174,
      left: 235,
    },
    missions: {
      zIndex: 5, // 5
      top: 20,
      left: 452,
    },
    training: {
      zIndex: 9, // 9
      top: 444,
      left: 454,
    },
    languages: {
      zIndex: 10, // 10
      top: 606,
      left: 701,
    },
    skillset: {
      zIndex: 8, // 8
      top: 188,
      left: 704,
    },
    "audio-feed": {
      zIndex: 3, // 3
      top: 697,
      left: 52,
    },
    "server-log": {
      zIndex: 4, // 4
      top: 597,
      left: 471,
    },
  },
  1200: {
    profile: {
      zIndex: 11, // 1
      top: 50,
      left: 25,
    },
    "face-capture": {
      zIndex: 6, // 6
      top: 114,
      left: 230,
    },
    location: {
      zIndex: 2, // 2
      top: 456,
      left: 116,
    },
    "known-associates": {
      zIndex: 7, // 7
      top: 240,
      left: 589,
    },
    missions: {
      zIndex: 4, // 4
      top: 60,
      left: 660,
    },
    training: {
      zIndex: 5, // 5
      top: 426,
      left: 690,
    },
    languages: {
      zIndex: 9, // 9
      top: 674,
      left: 416,
    },
    skillset: {
      zIndex: 10, // 10
      top: 211,
      left: 892,
    },
    "audio-feed": {
      zIndex: 3, // 3
      top: 730,
      left: 20,
    },
    "server-log": {
      zIndex: 8, // 8
      top: 700,
      left: 768,
    },
  },
  1600: {
    profile: {
      zIndex: 11, // 1
      top: 50,
      left: 54,
    },
    "face-capture": {
      zIndex: 4, // 4
      top: 132,
      left: 380,
    },
    location: {
      zIndex: 2, // 2
      top: 461,
      left: 119,
    },
    "known-associates": {
      zIndex: 7, // 7
      top: 50,
      left: 1261,
    },
    missions: {
      zIndex: 8, // 8
      top: 60,
      left: 629,
    },
    training: {
      zIndex: 6, // 6
      top: 541,
      left: 1048,
    },
    languages: {
      zIndex: 10, // 10
      top: 680,
      left: 1196,
    },
    skillset: {
      zIndex: 9, // 9
      top: 298,
      left: 829,
    },
    "audio-feed": {
      zIndex: 3, // 3
      top: 683,
      left: 40,
    },
    "server-log": {
      zIndex: 5, // 5
      top: 671,
      left: 530,
    },
  },
};

var cards = [
  {
    title: "Profile",
    width: 380,
      <div class="profile-info">
        <table>
          <tbody>
            <tr><td>Name</td><td>Amar Chandan</td></tr>
            <tr><td>Profession</td><td>Student</td></tr>
            <tr><td>Sex</td><td>Virgin</td></tr>
            <tr>
              <td>Contact</td>
              <td>
                <a href="mailto:amarchandan@outlook.com"><i class="fas fa-envelope"></i></a>
                <a href="https://www.linkedin.com/in/theamarchandan"><i class="fab fa-linkedin-in"></i></a>
                <a href="https://x.com/theamarchandan"><i class="fab fa-twitter"></i></a>
                <a href="https://github.com/amarchandan" target="_blank"><i class="fab fa-github"></i></a>
              </td>
            </tr>
          </tbody>
        </table>
      </div>`,
  },
  {
    title: "Missions",
    width: 560,
    html: `<table><tbody><tr><td>KIDNAPPED RICH BITCH ðŸ¥º</td></tr></tbody></table>`,
  },
  {
    title: "Languages",
    width: 250,
    html: `<table><tbody>
        <tr><td width="50%">Assembly</td><td>BASH</td></tr>
        <tr><td>C</td><td>C++</td></tr>
        <tr><td>Python</td><td>Rust</td></tr>
      </tbody></table>`,
  },
  {
    title: "Skillset",
    length:300,
    width: 350,
    html: `<table><tbody>
        <tr><td>Web Development (Noob in frontend)</td></tr>
        <tr><td>Cloud Computing</td></tr>
        <tr><td>API Creation / Integration</td></tr>
        <tr><td>Linux (Shell Scripting & Basics)</td></tr>
        <tr><td>Cybersecurity (Red / Blue / Yellow Team)</td></tr>
        <tr><td>DevOps - Git / GitHub / Azure / AWS</td></tr>
      </tbody></table>`,
  },
  { title: "Server Log", width: 400, html: `<div class="server-log-container"></div>` },
];

var cardsContainer = document.querySelector(".cards-container");
let cardsHTML = "";
cards.forEach(function (card, i) {
  var cardClass = card.title.toLowerCase().replace(/ /g, "-");
  var cardStyles = `width:${card.width}px;`;
  cardsHTML += `
    <div class="card ${cardClass}" style="${cardStyles}" tabindex="0" data-card="${cardClass}">
      <div class="card-header">
        <div class="card-title"><h2>${card.title}</h2></div>
        <div class="card-actions"><a href="#" class="move-card" tabindex="-1"><i class="fa fa-arrows-alt"></i></a></div>
      </div>
      <div class="card-body">${card.html}</div>
    </div>`;
});
cardsContainer.innerHTML = cardsHTML;

var highZ = cards.length + 1;
var cardEls = document.querySelectorAll(".cards-container .card");
cardEls.forEach(card => {
  card.onfocus = () => {
    card.style.zIndex = highZ + 1;
    highZ++;
  };
});

let dragEl = null, startX = 0, startY = 0, diffX = 0, diffY = 0;
function getTouchEvent(e) {
  var touch = e;
  if (e.type.startsWith("touch")) {
    var evt = e.originalEvent || e;
    touch = evt.touches[0] || evt.changedTouches[0];
  }
  return touch;
}
function touchstart(e) {
  var touchEvt = getTouchEvent(e);
  dragEl = null;
  if (!e.target.closest(".send-message") && !e.target.closest(".terminal")) {
    if (e.target.closest(".card")) {
      e.target.closest(".card").style.zIndex = highZ + 1;
      highZ++;
    }
    if (e.target.closest(".card-header")) {
      dragEl = e.target.closest(".card");
      startX = touchEvt.clientX;
      startY = touchEvt.clientY;
      diffX = startX - dragEl.offsetLeft;
      diffY = startY - dragEl.offsetTop;
    }
  }
}
function touchmove(e) {
  if (dragEl) {
    var touchEvt = getTouchEvent(e);
    e.preventDefault();
    dragEl.style.transform = `translate(${touchEvt.clientX - diffX}px, ${touchEvt.clientY - diffY}px)`;
    dragEl.style.willChange = "transform";
  }
}
function touchend() {
  if (dragEl) dragEl = null;
}
document.addEventListener("mousedown", touchstart);
document.addEventListener("mousemove", touchmove);
document.addEventListener("mouseup", touchend);
document.addEventListener("touchstart", touchstart);
document.addEventListener("touchmove", touchmove);
document.addEventListener("touchend", touchend);

var AudioFeed = function (options) {
  if (!options.container) return;
  var audioFeed = options.container;
  var audioFeedHeight = audioFeed.clientHeight;
  var barColor = options.barColor || "#fff";
  audioFeed.style.width = "100%";
  audioFeed.style.backgroundColor = options.bgColor || "#000";
  audioFeed.style.display = "table";
  var barWidth = Math.floor(audioFeed.clientWidth / 100);
  for (var i = 0; i < 100; i++) {
    audioFeed.innerHTML += `<div class="audio-bar-wrap" style="width:${barWidth}px;display:table-cell;vertical-align:bottom;">
      <div class="audio-bar" style="background:${barColor};margin:0 1px;transition:.3s;"></div></div>`;
  }
  function animate() {
    const bars = document.querySelectorAll(".audio-bar");
    const count = Math.floor(bars.length * 0.3);
    for (let i = 0; i < count; i++) {
      let bar = bars[Math.floor(Math.random() * bars.length)];
      bar.style.height = Math.floor(Math.random() * audioFeedHeight) + "px";
    }
    requestAnimationFrame(animate);
  }
  requestAnimationFrame(animate);
};
new AudioFeed({
  container: document.querySelector(".audio-feed-container"),
  barColor: "#67B6B9",
});

function getNearestBreakpoint(width) {
  if (width >= 1600) return 1600;
  if (width >= 1200) return 1200;
  if (width >= 980) return 980;
  return 768;
}
function positionCards() {
  if (cardsContainer.offsetWidth > 480) {
    let bp = getNearestBreakpoint(cardsContainer.offsetWidth);
    cardEls.forEach(card => {
      let cardObj = cardPositions[bp][card.dataset.card];
      if (cardObj) {
        card.style.top = cardObj.top + "px";
        card.style.left = cardObj.left + "px";
        card.style.zIndex = cardObj.zIndex;
      }
    });
  }
}
window.addEventListener("resize", () => {
  clearTimeout(window.resizeTimeout);
  window.resizeTimeout = setTimeout(positionCards, 300);
});
positionCards();
